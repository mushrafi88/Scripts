#!/bin/bash

# Lock file
lock_file="/tmp/wallpaper_set.lock"

# Check if there's already a running instance
if [ -e "$lock_file" ]; then
  echo "wallpaper_set is already running."
  exit 0
fi

# Create lock file with the current process ID
echo $$ > "$lock_file"

# Function to set the selected folder and shuffle wallpapers
load_selected_folder() {
  selected_folder=$(cat ~/selected_folder.txt)
  selected_folder=~/Pictures/wallpapers/"$selected_folder"
  shuffled_wallpapers=($(find "$selected_folder" -type f \( -name '*.jpg' -o -name '*.jpeg' -o -name '*.png' \) | shuf))
}

# Global variables
current_index=0
direction=1

# Functions for moving to the next or previous wallpaper
move_next() {
  direction=1
  current_index=$((current_index + direction))
}

move_previous() {
  direction=-1
  current_index=$((current_index + direction))
}

# Trap signals to move to the next or previous wallpaper
trap 'move_next' USR1
trap 'move_previous' USR2

# Load the initial selected folder and shuffle wallpapers
load_selected_folder

# Continuously set the wallpaper using feh
while true; do
  wallpaper=${shuffled_wallpapers[$current_index]}
  feh --bg-fill --no-fehbg "$wallpaper"
  sleep 300 & # 5 minutes * 60 seconds
  wait $!
  current_index=$((current_index + direction))
done

